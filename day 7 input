print(object1,object2,object3...,sep='',end='\n')
#输入两个变量，用,分隔
x,y=input('').split(',')
x,y=eval(input(''))
#变成列表，eval变成想要的数值
x,y=list(eval(input('')))
print(x);print(y)

for i in range(1,5):
  print(i,end='')
  
eval(item) for item in lst

函数式编程
map();reduce();filter();lambda()
将函数映射到map列表中
list=[3,2,5,8,1]
list(map(lambda x:x*2,lst))
list(filter(lambda x:x%2==0,lst))

from functools import reduce
lst=[1,2,3,4,5]
reduce(lambda x,y:x+y,lst)
递归结果，只产生一个结果y
word.upper()

可变可迭对象，修改问题解释
for产生可迭代的迭代器
如果使用remove 或者insert会影响迭代器的迭代
for x in lst[:]:
  if x%2==0
    lst.remove(x)
浅拷贝[:] copy(x)
是否会修改原始对象
字符串是可以的，但是列表需要浅拷贝[:]

同一个储存空间的对象，会改变
深拷贝是一级元素和二级元素都没有改变的

