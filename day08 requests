r=requests.get（）
response 对象包含爬虫返回的内容
r.status_code 请求返回状态 如果是404（url返问出错）
r.text 相应内容的字符串形式
r.encoding 编码方式
r.apparent_encoding utf-8
#先用r.apparent_coding看一下，再用r.apparent_coding='utf-8'
r.content(二进制形式）
200访问成功
r.type
r.headers

理解requests库异常
requests.ConnectionError
requests.HTTPError
requests.URLRequired
requests.TooManyRedirects
requests.ConnectTimeout
requests.Timeout
r.raise_for_status

通用代码框架
def getHTMLText(url):
  try:
    r=requests.get(url.timeout=30)
    r.raise_for_status()
    r.encoding=r.apparent_encoding
    return r.text
  except:
    return"产生异常"
    
 http：超文本传输协议
 一个url对应一个数据资源
 
 get（获取url位置资源）
 head（头部信息）
 post（附加新的数据）
 put（向url存储一个资源，覆盖原有资源）
 patch（局部更新）
 delete
 requests.requests(method,url,**kwargs)

 参数
 #params  #增加kwargs到url中
 #data
 #jsons
 #headers
 #cookies/auth
 #files
 #timeout
 #proxies
